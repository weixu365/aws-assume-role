name: Build

on:
  push:
    branches:
    - master
    - '*'
  # pull_request:
  #   branches:
  #   - master

permissions:
  contents: write
  deployments: write
  issues: write
  packages: write
  pull-requests: write

jobs:
  style-check:
    name: Check Style
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v1

      - name: Install rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          components: rustfmt
          profile: minimal
          override: true

      - run: make style-check

  build:
    name: build
    # if: startsWith(github.ref, 'refs/tags/')
    strategy:
      matrix:
        os: 
          - host: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            suffix: 
          # - host: ubuntu-latest
          #   target: x86_64-unknown-linux-musl
          - host: windows-latest
            target: x86_64-pc-windows-gnu
            suffix: .exe
          - host: macos-latest
            target: x86_64-apple-darwin
            suffix: 
          - host: macos-latest
            target: aarch64-apple-darwin
            suffix: 
    runs-on: ${{ matrix.os.host }}
    steps:
      - name: Checkout
        uses: actions/checkout@v1
      - name: Install rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          profile: minimal
          override: true
          target: ${{ matrix.os.target }}

      - name: Build
        run: cargo build --release --target ${{ matrix.os.target }}

      - uses: actions/upload-artifact@v3
        with:
          name: aws-assume-role-${{ matrix.os.target }}${{matrix.os.suffix}}
          path: target/${{ matrix.os.target }}/release/aws-assume-role${{matrix.os.suffix}}
          retention-days: 1
      # - name: Publish
      #   uses: softprops/action-gh-release@v1
      #   # TODO: if any of the build step fails, the release should be deleted.
      #   with:
      #       files: 'aws-assume-role*'
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  release:
    needs: build
    runs-on: ubuntu-latest
    name: release
    steps:
      - uses: actions/download-artifact@v3

      - name: Display fetched artifacts
        run: ls -R

      - name: Show env
        run: env

      - uses: go-semantic-release/action@v1
        with:
          hooks: goreleaser
          github-token: ${{ secrets.GITHUB_TOKEN }}
          custom-arguments: --no-ci
